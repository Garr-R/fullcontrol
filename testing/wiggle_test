import fullcontrol as fc
#import  from t0_ultra_one
from math import tau, sin

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~ Wiggle Test ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def main():
    # Define the printer profile:
    # Ultra One options:    ultra_one_T0_settings // ultra_one_T1_settings
    # M3 options:           m3_id_T0_settings // m3_id_T1_settings // m3_se_settings
    # M2 options:           m2_settings
    selected_printer = m2_settings
    
    # Define the filament profile:
    # PETG_filament_settings // ABS_filament_settings // ASA_filament_settings // TPU_filament_settings // NYLON_filament_settings // PLA_filament_settings // PVA_filament_settings
    selected_filament = PETG_filament_settings 

    # Define the nozzle profile:
    # nozzle_0_25mm_settings // nozzle_0_35mm_settings // nozzle_0_50mm_settings // nozzle_0_75mm_settings
    selected_nozzle = nozzle_0_35mm_settings 

    # Define the printer to use (for the start/end gcode scripts and filename):
    printer = selected_printer['printer'] 

    # Filename without extension
    filename = '9_wiggle_test_' + printer + '_' + str(selected_nozzle['nozzle_name']) + '_' + str(selected_filament['filament_name'])

    # Custom parameters for the wiggle test
    print_settings = {
        'primer': 'front_lines_then_xy', # or 'no_primer' when using the maintenance procedure to prime the nozzle
        'extrusion_width': selected_nozzle['nozzle_extrusion_width'],
        'print_speed_percent': selected_filament['filament_print_speed_percent'],
        'material_flow_percent': selected_filament['filament_material_flow_percent'],
        'nozzle_temp': selected_filament['filament_hotend_temp'],
        'bed_temp': selected_filament['filament_bed_temp'],
        'fan_percent': selected_filament['filament_fan_percent'],
        'travel_speed': 18000
        }

    # Used in the original (javascript) wiggle script:
    #{% set xpos = parameters.wiggleX %}
    #{% set ypos = parameters.wiggleY %}
    #{% set zpos = parameters.wiggleHeight %}

    # Wiggle starting height calibration parameters

    # Center starting position TODO: verify if this is correct
    Xaxis_pos = selected_printer['x_volume'] / 2 - 20
    Yaxis_pos = selected_printer['y_volume'] / 2 - 20
    Zaxis_pos = 0.2 # in the future maybe something like {% set zpos = parameters.wiggleHeight %}

    Xaxis_movement = 20.0
    Yaxis_movement = selected_nozzle['nozzle_Yaxis_movement']
    Yaxis_movement_increment = selected_nozzle['nozzle_Yaxis_increment']

    # total number of loops (22 zig-zag lines)
    zig_zag_lines = 9


    # Begin 
    steps = []

    # Move to starting position
    steps.append(fc.Point(x=Xaxis_pos, y=Yaxis_pos, z=Zaxis_pos, color=[0, 1, 0]))

    # Enable the extruder
    steps.append(fc.Extruder(on=True))

    # Loop through the zig-zag lines
    for x in range(zig_zag_lines):

        # Increment the Xaxis position
        Xaxis_pos = Xaxis_pos + Xaxis_movement

        # Move 1: 
        steps.append(fc.Point(x=Xaxis_pos))

        # Increment the Yaxis position and print to console for debugging
        Yaxis_movement += Yaxis_movement_increment
        Yaxis_pos = Yaxis_pos + Yaxis_movement
        print("Loop: ", x + 1, " | new Yaxis_movement: ", Yaxis_movement.__round__(3))

        # Move 2: Disable the extruder when moving Y
        steps.append(fc.Extruder(on=False))
        steps.append(fc.Point(y=Yaxis_pos, color=[1, 0, 0]))
        steps.append(fc.Extruder(on=True))

        # Increment the Xaxis position
        Xaxis_pos = Xaxis_pos - Xaxis_movement

        # Move 3:
        steps.append(fc.Point(x=Xaxis_pos, y=Yaxis_pos, z=Zaxis_pos))

        # Increment the Yaxis position and print to console for debugging
        Yaxis_movement += Yaxis_movement_increment
        Yaxis_pos = Yaxis_pos + Yaxis_movement
        print("Loop: ", x + 1, " | new Yaxis_movement: ", Yaxis_movement.__round__(3))

        # Move 4: Disable the extruder when moving Y
        steps.append(fc.Extruder(on=False))
        steps.append(fc.Point(y=Yaxis_pos, color=[0, 0, 1]))
        steps.append(fc.Extruder(on=True))

    # Extrude a little bit of filament at the end while moving Z
    steps.append(fc.Point(z=15, color=[0, 1, 0]))

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~ Output options ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # generate the gcode
    fc.transform(steps, 'gcode', fc.GcodeControls(printer_name=printer, save_as=filename, initialization_data=print_settings))

    # plot the steps
    #fc.transform(steps, 'plot', fc.PlotControls(color_type='manual', zoom=4))

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~  Filament specific settings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# PLA is nearly finished  :D
PLA_filament_settings = {
    'filament_name': 'PLA',
    'filament_hotend_temp': 215,
    'filament_bed_temp': 60,
    'filament_fan_percent': 100,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# PETG hasn't been tested
PETG_filament_settings = {
    'filament_name': 'PETG',
    'filament_hotend_temp': 245,
    'filament_bed_temp': 75,
    'filament_fan_percent': 100,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# ABS hasn't been tested
ABS_filament_settings = {
    'filament_name': 'ABS',
    'filament_hotend_temp': 250,
    'filament_bed_temp': 110,
    'filament_fan_percent': 0,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# ASA hasn't been tested
ASA_filament_settings = {
    'filament_name': 'ASA',
    'filament_hotend_temp': 250,
    'filament_bed_temp': 110,
    'filament_fan_percent': 0,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# TPU hasn't been tested
TPU_filament_settings = {
    'filament_name': 'TPU',
    'filament_hotend_temp': 250,
    'filament_bed_temp': 110,
    'filament_fan_percent': 0,
    'filament_print_speed_percent': 60,
    'filament_material_flow_percent': 90
}

# NYLON hasn't been tested
NYLON_filament_settings = {
    'filament_name': 'NYLON',
    'filament_hotend_temp': 250,
    'filament_bed_temp': 110,
    'filament_fan_percent': 0,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# Cheating because POLYSUPPORT uses PLA settings
POLYSUPPORT_filament_settings = {
    'filament_name': 'POLYSUPPORT',
    'filament_hotend_temp': 215,
    'filament_bed_temp': 60,
    'filament_fan_percent': 100,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# PVA hasn't been tested
PVA_filament_settings = {
    'filament_name': 'PVA',
    'filament_hotend_temp': 215,
    'filament_bed_temp': 60,
    'filament_fan_percent': 100,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

# PC hasn't been tested
PC_filament_settings = {
    'filament_name': 'PC',
    'filament_hotend_temp': 215,
    'filament_bed_temp': 60,
    'filament_fan_percent': 100,
    'filament_print_speed_percent': 75,
    'filament_material_flow_percent': 90
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~  Nozzle specific settings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nozzle_0_25mm_settings = {
    'nozzle_name': '0.25mm',
    'nozzle_extrusion_width': 0.3,
    'nozzle_Yaxis_movement': 0.38, # not correct
    'nozzle_Yaxis_increment': 0.01 # not correct
}

nozzle_0_35mm_settings = {
    'nozzle_name': '0.35mm',
    'nozzle_extrusion_width': 0.42, # Default extrusion width for 0.35mm nozzle
    'nozzle_Yaxis_movement': 0.38,  # correct (tested with PLA)
    'nozzle_Yaxis_increment': 0.01  # verified with PLA, it's too close for PETG
}

nozzle_0_50mm_settings = {
    'nozzle_name': '0.50mm',
    'nozzle_extrusion_width': 0.6, # Default extrusion width for 0.5mm nozzle
    'nozzle_Yaxis_movement': 0.42, # correct (tested with PLA)
    'nozzle_Yaxis_increment': 0.02 # correct (tested with PLA)
}

nozzle_0_75mm_settings = {
    'nozzle_name': '0.75mm',
    'nozzle_extrusion_width': 0.84,
    'nozzle_Yaxis_movement': 0.38, # not correct
    'nozzle_Yaxis_increment': 0.66 # not correct
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~ Printer specific settings (used for the bed size) ~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ultra_one_T0_settings = {
    'printer': 'makergear_ultra_one_T0',
    'x_volume': 406,
    'y_volume': 355
}
ultra_one_T1_settings = {
    'printer': 'makergear_ultra_one_T1',
    'x_volume': 406,
    'y_volume': 355
}
m3_id_T0_settings = {
    'printer': 'makergear_m3_id_T0',
    'x_volume': 200,
    'y_volume': 255
}
m3_id_T1_settings = {
    'printer': 'makergear_m3_id_T1',
    'x_volume': 200,
    'y_volume': 255
}
m3_se_settings = {
    'printer': 'makergear_m3_se',
    'x_volume': 200,
    'y_volume': 255
}
m2_settings = {
    'printer': 'makergear_m2',
    'x_volume': 200,
    'y_volume': 255
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~  Main ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if __name__ == "__main__":
    """ This is executed when run from the command line """
    main()